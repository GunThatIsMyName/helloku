[{"/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/index.js":"1","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/App.js":"2","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/Home.js":"3","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/Navbar.js":"4","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/BlogList.js":"5","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/contexts/AppContext.js":"6","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/utils/helper.js":"7","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/components/Loader.js":"8","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/components/Create.js":"9","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/components/BlogDetail.js":"10","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/hooks/useFetch.js":"11","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/components/Error.js":"12"},{"size":307,"mtime":1638155055590,"results":"13","hashOfConfig":"14"},{"size":519,"mtime":1638156693076,"results":"15","hashOfConfig":"14"},{"size":943,"mtime":1638174228602,"results":"16","hashOfConfig":"14"},{"size":466,"mtime":1638155390118,"results":"17","hashOfConfig":"14"},{"size":558,"mtime":1638157499751,"results":"18","hashOfConfig":"14"},{"size":518,"mtime":1638169871139,"results":"19","hashOfConfig":"14"},{"size":60,"mtime":1638157035779,"results":"20","hashOfConfig":"14"},{"size":111,"mtime":1638155264471,"results":"21","hashOfConfig":"14"},{"size":2411,"mtime":1638173502995,"results":"22","hashOfConfig":"14"},{"size":1546,"mtime":1638174312909,"results":"23","hashOfConfig":"14"},{"size":748,"mtime":1638174746800,"results":"24","hashOfConfig":"14"},{"size":122,"mtime":1638159034027,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"gt8o9i",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/index.js",[],["57","58"],"/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/App.js",[],"/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/Home.js",["59","60"],"import {useState} from 'react';\nimport BlogList from './BlogList';\nimport Error from './components/Error';\nimport Loader from './components/Loader';\nimport {useGlobalContext} from './contexts/AppContext';\nimport {useFetchData} from './hooks/useFetch';\nimport {API_END_POINT} from './utils/helper';\n\nconst Home = () => {\n  const {blogs, setBlogs, loading, error} = useFetchData(API_END_POINT);\n  const [name, setName] = useState('mario');\n\n  if (blogs) {\n    console.log(blogs, 'blogsssss');\n  }\n  if (loading) {\n    return <Loader />;\n  }\n  if (error) {\n    return <Error />;\n  }\n\n  const handleDelete = (id) => {\n    const newBlogs = blogs && blogs.filter((blog) => blog.id !== id);\n    setBlogs(newBlogs);\n  };\n\n  return (\n    <div className=\"content\">\n      <BlogList blogs={blogs} title=\"All Blogs\" handleDelete={handleDelete} />\n      <button onClick={() => setName('luigi')}>change name</button>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/Navbar.js",[],"/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/BlogList.js",[],"/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/contexts/AppContext.js",["61"],"import React, {useContext, useState} from 'react';\nimport {useFetchData} from '../hooks/useFetch';\nimport {API_END_POINT} from '../utils/helper';\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({children}) => {\n  const {blogs, loading, error} = useFetchData(API_END_POINT);\n\n  return (\n    <AppContext.Provider value={{blogs, loading, error}}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport default AppProvider;\n","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/utils/helper.js",[],"/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/components/Loader.js",[],"/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/components/Create.js",["62","63"],"import React, {useState} from 'react';\nimport {useNavigate} from 'react-router';\nimport styled from 'styled-components';\nimport {useGlobalContext} from '../contexts/AppContext';\nimport {API_END_POINT} from '../utils/helper';\n\nconst Create = () => {\n  const newBlog = {title: '', body: '', author: ''};\n  const [state, setState] = useState(newBlog);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  console.log(navigate, 'navigate');\n  const handleValue = (e) => {\n    const {value} = e.target;\n    const {name} = e.target;\n    setState((prev) => {\n      return {...prev, [name]: value};\n    });\n  };\n\n  const postBlog = async () => {\n    setLoading(true);\n    const rawResponse = await fetch(API_END_POINT, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(state),\n    });\n    const content = await rawResponse.json();\n    setLoading(false);\n    navigate('/');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    postBlog();\n  };\n\n  return (\n    <Wrapper>\n      <h1>new blog created</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"title \">blog title : </label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={state.title}\n          onChange={handleValue}\n          required\n          placeholder=\"write your blog title\"\n        />\n        <label htmlFor=\"body \">blog body : </label>\n        <textarea\n          type=\"text\"\n          id=\"body\"\n          name=\"body\"\n          value={state.body}\n          onChange={handleValue}\n          required\n          placeholder=\"write your blog body\"\n        />\n        <label htmlFor=\"author \">blog author : </label>\n        <select\n          value={state.author}\n          onChange={handleValue}\n          name=\"author\"\n          id=\"author\"\n          required\n        >\n          <option value=\"mario\">mario</option>\n          <option value=\"minji\">minji</option>\n        </select>\n        <button disabled={loading}>{loading ? 'Adding...' : 'Add blog'}</button>\n      </form>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin: 2rem auto;\n  form {\n    display: flex;\n    flex-direction: column;\n    max-width: 1000px;\n    margin: 2rem auto;\n    input,\n    textarea,\n    select {\n      padding: 0.3rem;\n      margin: 1rem auto;\n    }\n  }\n`;\nexport default Create;\n","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/components/BlogDetail.js",["64"],"import React, {useEffect} from 'react';\nimport {useNavigate, useParams} from 'react-router';\nimport {Link} from 'react-router-dom';\nimport {API_END_POINT} from '../utils/helper';\nimport Loader from './Loader';\nimport styled from 'styled-components';\nimport {useFetchData} from '../hooks/useFetch';\nimport Error from './Error';\n\nconst BlogDetail = () => {\n  const {id} = useParams();\n  const {loading, error, blogs} = useFetchData(`${API_END_POINT}?id=${id}`);\n  const navigate = useNavigate();\n  if (loading) {\n    return <Loader />;\n  }\n  if (error) {\n    return <Error />;\n  }\n  if (blogs) {\n    console.log(blogs);\n  }\n\n  const handleClick = async () => {\n    fetch(`${API_END_POINT}/${id}`, {\n      method: 'DELETE',\n    }).then(() => {\n      navigate('/');\n    });\n  };\n  return (\n    <Wrapper>\n      <Link className=\"btn\" to=\"/\">\n        back to home\n      </Link>\n      {blogs &&\n        blogs.map((item) => {\n          const {author, title, body, id} = item;\n          return (\n            <article key={id}>\n              <h2>{title}</h2>\n              <h3>written by {author}</h3>\n              <p>{body}</p>\n            </article>\n          );\n        })}\n      <button onClick={handleClick}>delete</button>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin: 2rem auto;\n  max-width: 800px;\n  .btn {\n    margin: 13rem;\n    padding: 0.5rem 1rem;\n    background: gold;\n    border-radius: 5px;\n  }\n  p {\n    margin: 2rem 0;\n  }\n  article {\n    margin: 2rem 0;\n  }\n  h2 {\n    margin: 0.3rem 0;\n  }\n`;\n\nexport default BlogDetail;\n","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/hooks/useFetch.js",["65"],"import {useEffect, useState} from 'react';\n\nexport const useFetchData = (url) => {\n  const [blogs, setBlogs] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const getData = async () => {\n    setLoading(true);\n    setError(false);\n\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        setError(true);\n        throw new Error(`not matched our ${url} URL`);\n      }\n      const data = await response.json();\n      if (data) {\n        setBlogs(data);\n      }\n      setLoading(false);\n    } catch (error) {\n      setError(true);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return {blogs, setBlogs, loading, error};\n};\n","/Users/mandy/Desktop/react/json-server-project/dojo-blog/src/components/Error.js",[],["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":5,"column":9,"nodeType":"74","messageId":"75","endLine":5,"endColumn":25},{"ruleId":"72","severity":1,"message":"76","line":11,"column":10,"nodeType":"74","messageId":"75","endLine":11,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":4,"column":9,"nodeType":"74","messageId":"75","endLine":4,"endColumn":25},{"ruleId":"72","severity":1,"message":"78","line":28,"column":11,"nodeType":"74","messageId":"75","endLine":28,"endColumn":18},{"ruleId":"72","severity":1,"message":"79","line":1,"column":16,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":31,"column":6,"nodeType":"82","endLine":31,"endColumn":8,"suggestions":"83"},{"ruleId":"68","replacedBy":"84"},{"ruleId":"70","replacedBy":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'useGlobalContext' is defined but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'useState' is defined but never used.","'content' is assigned a value but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["88"],["86"],["87"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [getData]",{"range":"91","text":"92"},[695,697],"[getData]"]